{"remainingRequest":"C:\\Users\\thoma\\OneDrive\\Bureau\\iut\\projet_S3\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\thoma\\OneDrive\\Bureau\\iut\\projet_S3\\client\\src\\components\\CardUser.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\thoma\\OneDrive\\Bureau\\iut\\projet_S3\\client\\src\\components\\CardUser.vue","mtime":1612627331972},{"path":"C:\\Users\\thoma\\OneDrive\\Bureau\\iut\\projet_S3\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1612117585820},{"path":"C:\\Users\\thoma\\OneDrive\\Bureau\\iut\\projet_S3\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1612117580510},{"path":"C:\\Users\\thoma\\OneDrive\\Bureau\\iut\\projet_S3\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1612117585820},{"path":"C:\\Users\\thoma\\OneDrive\\Bureau\\iut\\projet_S3\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1612117788453}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogWyJub21VdGlsaXNhdGV1ciIsICJub20iLCAicHJlbm9tIiwgInN0YXR1dCJdLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB1c2VyOiB7fSwKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyBnZXRJbmZvVXNlcigpIHsKICAgICAgY29uc3QgcGFyYW1zID0gewogICAgICAgIG5vbVV0aWxpc2F0ZXVyOiB0aGlzLm5vbVV0aWxpc2F0ZXVyLAogICAgICB9OwogICAgICBjb25zdCBpbmZvID0gYXdhaXQgdGhpcy4kaHR0cC5nZXQoYC91c2VyL25vbVV0aWxpc2F0ZXVyYCwgeyBwYXJhbXMgfSk7IC8vJHt0aGlzLmVtYWlsfQogICAgICB0aGlzLnVzZXIgPSBpbmZvLmRhdGEudXNlcjsKICAgIH0sCiAgICByZWRpcmVjdCgpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goYC9tZW1icmUvJHt0aGlzLm5vbVV0aWxpc2F0ZXVyfWApOwogICAgfSwKICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLnVzZXIgPSB0aGlzLmdldEluZm9Vc2VyKCk7CiAgfSwKfTsK"},{"version":3,"sources":["CardUser.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CardUser.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"card\">\n    <div>\n      <div id=\"imgProfil\">\n        <img src=\"../assets/Logo.png\" alt=\"\" />\n      </div>\n      <div id=\"infoProfil\">\n        <p id=\"name\">{{ this.nom }} {{ this.prenom }}</p>\n        <p>{{ this.statut }}</p>\n      </div>\n    </div>\n    <div class=\"button\">\n      <button @click=\"redirect\">Voir le profil</button>\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  props: [\"nomUtilisateur\", \"nom\", \"prenom\", \"statut\"],\n  data() {\n    return {\n      user: {},\n    };\n  },\n  methods: {\n    async getInfoUser() {\n      const params = {\n        nomUtilisateur: this.nomUtilisateur,\n      };\n      const info = await this.$http.get(`/user/nomUtilisateur`, { params }); //${this.email}\n      this.user = info.data.user;\n    },\n    redirect() {\n      this.$router.push(`/membre/${this.nomUtilisateur}`);\n    },\n  },\n  created() {\n    this.user = this.getInfoUser();\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n$color: #26f191;\n#card {\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: center;\n\n  min-width: 350px;\n  width: 400px;\n  height: 200px;\n  border-radius: 5px;\n  border: 3px solid $color;\n  background-color: white;\n  color: $color;\n\n  box-shadow: 0px 100px 80px rgba(119, 119, 119, 0.07), 0px 41.7776px 33.4221px rgba(119, 119, 119, 0.0503198), 0px 22.3363px 17.869px rgba(119, 119, 119, 0.0417275), 0px 12.5216px 10.0172px rgba(119, 119, 119, 0.035), 0px 6.6501px 5.32008px rgba(119, 119, 119, 0.0282725), 0px 2.76726px 2.21381px rgba(119, 119, 119, 0.0196802);\n  div {\n    display: grid;\n    grid-template-columns: 40% 60%;\n    #imgProfil {\n      display: flex;\n      justify-content: center;\n      img {\n        height: 120px;\n        width: 120px;\n        object-fit: scale-down;\n        border-radius: 5px;\n      }\n    }\n    #infoProfil {\n      display: flex;\n      flex-direction: column;\n      justify-content: flex-start;\n      \n      #name {\n        font-size: 1.5vw;\n        font-weight: 700;\n      }\n      p {\n        font-size: 1vw;\n      }\n    }\n  }\n  .button {\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: flex-end;\n    padding: 0 2vw;\n    \n    button {\n      background: $color;\n      border: 2px solid $color;\n      border-radius: 5px;\n      width: 150px;\n      padding: 0.75vh 1vw;\n      color: white;\n      font-weight: 600;\n    }\n  }\n}\n</style>\n"]}]}